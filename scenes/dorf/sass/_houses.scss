// All dimensions below assume cell size of 320x320 (i.e., $dim-house).

// ID houseWidth iceWidth dateX dateY
$houses:
"codeboogie"       21 152,
"traditions"       124 227,
"airport"          130 286,
"app"              105 265,
"presentbounce"    80 45,
"santasback"       -107 92,
"translations"     66 150,
"snowflake"        -60 193,
"seasonofgiving"  58 192,
"santaselfie"      99 165,
"penguindash"    -56 111,
"santasearch"    80 81,
"codelab"        -101 108,
"commandcentre" -76 84,
"gumball" -63 165,
"jamband"  -88 122,
"wrapbattle"  100 46,
"boatload" 75 115,
"runner"  -107 99,
"jetpack"  47 130,
"carpool"  75 194,
"briefing"  91 169,
"presentdrop" -65 120,
"mercator" -112 205,
"racer"  -65 197,
"matching"  82 153,
"liftoff"  -58 233,
"callfromsanta"  98 195,
"citylights"  115 112,
"postcard" 87 179,
"santascanvas"    60 190,
"elfski"          -20 120,
"snowball"        60 100,
"speedsketch"     -100 22,
;

// 0th is 'new today'
$cells:
    // row 0
    0   0  ,
    123 208,
    124 227,
    130 286,
    // row 1
    156 353,
    145 264,
    192 242,
    204 240,
    // row 2
    136 250,
    125 222,
    164 260,
    170 255,
    // row 3
    160 240,
    174 225,
    165 250,
    170 220,
    // row 4
    157 170,
    100 265,
    94  252,
    160 262,
    // row 5
    141 256,
    149 285,
    183 259,
    175 296,
    // row 6
    151 278,
    148 260,
    142 245,
    179 341,
;

// # Tablet and above cell alignment

@media (min-width: $width-tablet) {
  .cells {
    @for $i from 1 through length($cells) {
      $data: nth($cells, $i);
      $x: nth($data, 1);
      $y: nth($data, 2);
      $row: floor(($i - 1) / 4);
      $within: ($y / 320);

      .cell:nth-child(#{$i}) {
        --cell-x: $x / 320;
        --cell-y: $y / 320;
        --cell-layer: round(($row + $within) * 320);  // z-index must be an integer
      }
    }
  }

  #links {
    .link {
      position: absolute;
      transform: translate(-50%, -50%);
    }
    @for $i from 1 through length($cells) {
      .link:nth-child(#{$i - 1}) {
        $row: floor(($i - 1) / 4);
        $col: ($i - 1) % 4;

        $data: nth($cells, $i);
        $x: nth($data, 1);
        $y: nth($data, 2);

        left: ($col * 192px) + ($x / 320) * 192px;
        top: ($row * 192px) + ($y / 320) * 192px;
      }
    }
  }
}
@media (min-width: $width-desktop) {
  #links {
    // FIXME: this is a horrible clone of above for 320px dimensions.
    @for $i from 1 through length($cells) {
      .link:nth-child(#{$i - 1}) {
        $row: floor(($i - 1) / 4);
        $col: ($i - 1) % 4;

        $data: nth($cells, $i);
        $x: nth($data, 1);
        $y: nth($data, 2);

        left: ($col * 320px) + $x;
        top: ($row * 320px) + $y;
      }
    }
  }
}

#houses {
  @for $i from 1 through length($houses) {
    $house: nth($houses, $i);
    $id: nth($house, 1);

    village-house[house="#{$id}"] {
      --date-x: nth($house, 2) * 1px;
      --date-y: nth($house, 3) * -1px;
    }
  }
}

#links {
  @for $i from 1 through length($houses) {
    $house: nth($houses, $i);
    $id: nth($house, 1);

    .link[house="#{$id}"] {
      .card::before {
        background-image: url(../../images/scenes/#{$id}_2x.png);;
      }
    }
  }
}