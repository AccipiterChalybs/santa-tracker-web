$button-bp: 661px;
$button-colors: (
  green:      (base: #32a658, shadow: #2a8c4a),
  orange:     (base: #ff9802, shadow: #f57c00),
  orangered:  (base: #ff3f00, shadow: #f52f00),
  purple:     (base: #ad00ad, shadow: #8f0093),
  red:        (base: #ff0060, shadow: #e70058),
  white:      (base: #efefef, shadow: #c1dbd9),
  yellow:     (base: #ffc100, shadow: #f0922b),
);
$button-shadow: rgba(0, 0, 0, 0.16);

$button-icons: (
  globe: globe,
  home: home,
  menu: menu-hamburger,
  mute: volume-off,
  next: arrow-key-right,
  next-dark: arrow-key-right-dark,
  pause: pause,
  play: play,
  prev: arrow-key-left,
  prev-dark: arrow-key-left-dark,
  share: share,
  shuffle: shuffle,
  refresh: refresh,
  replay: replay,
  trash: trash,
  unmute: volume-on,
  next-arrow: arrow-right,
  prev-arrow: arrow-left
);

@function setColor($color, $tone: base) {
  @return map-get(map-get($button-colors, $color), $tone);
}

@mixin ButtonColor($color) {
  background-color: setColor($color);
  box-shadow: 3px 6px 0 setColor($color, shadow), 8px 9px 0 $button-shadow;
  transform: translate(-3px, -6px);
  &:active {
    // transition to a shadow of the same color, but just hidden
    box-shadow:
        0 0 0 setColor($color, shadow),
        0 0 2px $button-shadow !important;
  }

  @if $color == white {
    color: #444;
  }

  &.Button--round {
    // same as square shadow/transform

    &.Button--small {
      box-shadow: 2px 4px 0 setColor($color, shadow), 5px 7px 0 $button-shadow;
      transform: translate(-2px, -4px);
    }

    &.Button--large {
      box-shadow: 5px 7px 0 setColor($color, shadow), 13px 14px 0 $button-shadow;
      transform: translate(-5px, -7px);
    }
  }
}

$shared: '../shared/' !default;
@mixin ButtonIcon($icon) {
  background-image: url(#{$shared}img/button/#{$icon}.svg);
}

##{$name} {
  $duration-in: 0.05s;
  $duration-out: 0.25s;

  .Button {
    -webkit-font-smoothing: antialiased;
    background-position: 50% 50%;
    background-repeat: no-repeat;
    background-size: 20px;
    border: none;
    border-radius: 5px;
    box-sizing: border-box;
    color: #fff;
    cursor: pointer;
    display: inline-block;
    font-family: 'Roboto', sans-serif;
    font-size: 16px;
    -webkit-font-smoothing: antialiased;
    font-weight: normal;
    line-height: 32px;
    margin: 0 4px;
    min-height: 32px;
    padding: 0 8px;
    position: relative;
    text-align: center;
    text-decoration: none;
    transition: box-shadow $duration-out ease-in, transform $duration-out ease-in;
    user-select: none;

    @include ButtonColor(purple);

    @media (min-width: $button-bp) {
      background-size: 30px;
      border-radius: 8px;
      font-size: 22px;
      line-height: 52px;
      min-height: 52px;
      padding: 0 12px;
    }

    &:active {
      transition-duration: $duration-in;
      transform: translate(0, 0) !important;
    }
  }

  .Button--small {
    background-size: 20px;
    border-radius: 5px;
    font-size: 16px;
    line-height: 32px;
    min-height: 32px;
    padding: 0 18px;
  }

  .Button--large {
    background-size: 50px;
    font-size: 28px;
    line-height: 80px;
    min-height: 80px;
    padding: 0 45px;
  }

  .Button--round {
    border-radius: 50%;
    height: 32px;
    padding: 0 !important; // no padding on circles
    width: 32px;
    min-width: 32px;

    @media (min-width: $button-bp) {
      height: 55px;
      width: 55px;
      min-width: 55px;
    }

    &.Button--small {
      height: 32px;
      width: 32px;
      min-width: 32px;
    }

    &.Button--large {
      height: 88px;
      width: 88px;
      min-width: 88px;
    }

    &.Button--text {
      border-radius: 10000px;
    }
  }

  .Button--text {
    width: auto;
  }

  .Button--noText {
    overflow: hidden;
    text-indent: 100%;
    white-space: nowrap;
  }

  @each $icon, $file in $button-icons {
    .Button--#{$icon} {
      background-image: url(#{$shared}img/button/#{$file}.svg);
    }
  }
}
